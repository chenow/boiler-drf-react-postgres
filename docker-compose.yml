version: "3.9"

services:
  database:
    image: postgres:16.1-alpine3.19
    volumes:
      - database-volume:/var/lib/postgresql/data
    container_name: database
    restart: always
    env_file:
      - .env.database

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    container_name: backend
    env_file:
      - .env.database
      - backend/.env
    depends_on:
      - database
    restart: always
    volumes:
      - ./backend/src:/app/src
      - ./backend/pyproject.toml:/app/pyproject.toml

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    stop_grace_period: 1s
    ports:
      - "3000:3000"
    container_name: frontend
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/.eslintrc.cjs:/app/.eslintrc.cjs
      - ./frontend/.prettierrc.cjs:/app/.prettierrc.cjs

    restart: always
    env_file:
      - frontend/.env

  shell:
    scale: 0
    container_name: shell
    build:
      dockerfile: Dockerfile.dev
      context: ./backend
    env_file:
      - .env.database
      - backend/.env
    volumes:
      - ./backend/src:/app
      - ./backend/.ptpython_history:/root/.ptpython_history
    entrypoint: python manage.py
    command: ["shell_plus", "--ptpython"]
    depends_on:
      - database

volumes:
  database-volume:
