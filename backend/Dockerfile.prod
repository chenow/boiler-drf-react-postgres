# ---- Builder Stage ----
FROM python:3.12.2-alpine3.19 as builder

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

WORKDIR /app

RUN apk update \
    # # Dependencies for building Python packages
    # && apk add --virtual build-dep gcc python3-dev musl-dev \
    # # psycopg2 dependencies
    # && apk add postgresql-dev \
    # # Translations dependencies
    # && apk add gettext \
    # # Install pipenv and compilation dependencies
    && pip install --upgrade pip \
    && pip install pipenv

COPY Pipfile Pipfile.lock ./
RUN pipenv install --system --ignore-pipfile

# ---- Production Stage ----
FROM python:3.12.2-alpine3.19 as production

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Create directory for the app user
RUN mkdir -p /home/app

# Create the app user
RUN addgroup -S app && adduser -S app -G app

# Create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# Install production dependencies
COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy project
COPY ./src $APP_HOME

# Chown all the files to the app user
RUN chown -R app:app $APP_HOME

# Change to the app user
USER app

# Run gunicorn
CMD gunicorn _conf.wsgi:application --bind 0.0.0.0:8000

